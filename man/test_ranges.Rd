% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_ranges.R
\name{test_ranges}
\alias{test_ranges}
\title{Test Ranges on Variables in magpie Objects}
\usage{
test_ranges(
  data,
  tests,
  reaction = c("warning", "stop"),
  report.missing = FALSE
)
}
\arguments{
\item{data}{A \code{\link[magclass:magclass-package]{magpie}} object to test.}

\item{tests}{A list of tests to perform, where each tests consists of:
- A regular expression to match variables names in \code{data} (mandatory
first item).
- A named entry \code{low} to test the lower bound.  Can be set to \code{NULL} or
omitted.
- A named entry \code{up} to test the upper bound.  Can be set to \code{NULL} or
omitted.
- An optional entry \code{ignore.case} which can be set to \code{FALSE} if the
regular expression should be matched case-sensitive.}

\item{reaction}{A character string, either \code{'warning'} or \code{'stop'}, to either
warn or throw an error if variables exceed the ranges.}

\item{report.missing}{If set to \code{TRUE}, will message about regular
expressions from \code{tests} not matching any variables in \code{data}.}
}
\description{
Test Ranges on Variables in magpie Objects
}
\examples{
require(dplyr)
require(tidyr)

(data <- bind_rows(
  expand_grid(variable = 'Foo Share (\%)',
              value = c(-1, 0, 42, 100, 101)),
  expand_grid(variable = 'bar share (percent)',
              value = c(-1, 0, 42, 100, 101))) \%>\%
  group_by(variable) \%>\%
  mutate(year = 2000 + (1:n())) \%>\%
  ungroup() \%>\%
  select(year, variable, value) \%>\%
  as.magpie(spatial = 0, temporal = 1, data = 3))

tests <- list(list("Share.*\\\\((\%|Percent)\\\\)$", low = 0, up = 100))

test_ranges(data, tests)

}
\author{
Michaja Pehl
}
